{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","value","target","name","formData","state","setState","handleSelectChange","namenum","indexOf","handlePredictClick","result","isLoading","Math","exp","handleCancelClick","is_db","is_dbnum","is_htdrug","is_htdrugnum","bp","is_cal_ant","is_cal_antnum","cal_qu","dia_ant_long","dia_ant_short","dia_po_long","dia_po_short","thinnest","react_default","a","createElement","Container_default","className","Form_default","Row","Group","as","Col","Label","Control","onChange","type","placeholder","Row_default","Col_default","id","Button_default","block","variant","disabled","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.64284950.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/Form';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      formData: {\n        is_db: 'Yes',\n        is_dbnum: 1,\n        is_htdrug: 'Yes',\n        is_htdrugnum: 1,\n        bp: '',\n        is_cal_ant: 'Yes',\n        is_cal_antnum: 1,\n        cal_qu: '',\n        dia_ant_long: '',\n        dia_ant_short: '',\n        dia_po_long: '',\n        dia_po_short: '',\n        thinnest: '',\n      },\n      result: \"\"\n    };\n  }\n\n  handleChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    var formData = this.state.formData;\n    formData[name] = value;\n    this.setState({\n      formData\n    });\n  }\n\n  handleSelectChange = (event) => {\n    const value = event.target.value;\n    const name = event.target.name;\n    const namenum = name + \"num\";\n    var formData = this.state.formData;\n    formData[name] = value;\n    if (value.indexOf('Yes') === -1) {\n      formData[namenum] = 0;\n    } else {\n      formData[namenum] = 1;\n    }\n    this.setState({\n      formData\n    });\n  }\n\n  handlePredictClick = (event) => {\n    const formData = this.state.formData;\n    this.setState({ result: \"\", isLoading: true });\n\n    if (formData[\"bp\"]==='' || formData[\"cal_qu\"]==='' || formData[\"dia_ant_long\"]==='' || formData[\"dia_ant_short\"]==='' || formData[\"dia_po_long\"]==='' || formData[\"dia_po_short\"]==='' || formData[\"thinnest\"]==='') {\n      this.setState({\n          result: \"Error: everything cannot be null\",\n          isLoading: false\n        })\n    } else {\n      this.setState({\n          result: \"Early good mitral repair Rate: \" + 1/\n          (1 + Math.exp(0-\n              (formData[\"is_dbnum\"]*(-0.97) +\n               formData[\"is_htdrugnum\"]*0.97 +\n               formData[\"bp\"]*(-0.03) +\n               formData[\"is_cal_antnum\"]*(-1.410) +\n               formData[\"cal_qu\"]*(-0.42) +\n               (\n                  (formData[\"dia_ant_long\"]/formData[\"dia_po_long\"]) + \n                  (formData[\"dia_ant_short\"]/formData[\"dia_po_short\"] - 2)\n               )*(-0.75) +\n               formData[\"thinnest\"]*(-2.13)+\n               4.78\n              )\n             )\n          ),\n          isLoading: false\n        })\n    }\n\n  }\n\n  handleCancelClick = (event) => {\n    this.setState({ result: \"\" });\n  }\n\n\n  render() {\n    const isLoading = this.state.isLoading;\n    const formData = this.state.formData;\n    const result = this.state.result;\n\n    return (\n      <Container>\n        <div>\n          <h1 className=\"title\">Early Good Mitral Repair Scoring model</h1>\n        </div>\n        <div className=\"content\">\n          <Form>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label className=\"label-head\">Clinical Factors</Form.Label>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Diabetes</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.is_db}\n                  name=\"is_db\"\n                  onChange={this.handleSelectChange}>\n                  <option>Yes</option>\n                  <option>No</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Antihypertensive drugs</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.is_htdrug}\n                  name=\"is_htdrug\"\n                  onChange={this.handleSelectChange}>\n                  <option>Yes</option>\n                  <option>No</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Pulmonary artery pressure(mmHg)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mmHg)\" \n                  name=\"bp\"\n                  value={formData.bp}\n                  onChange={this.handleChange} />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label className=\"label-head\">CT Factors</Form.Label>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Calcification of anterior leaflet zona pellucida</Form.Label>\n                <Form.Control \n                  as=\"select\"\n                  value={formData.is_cal_ant}\n                  name=\"is_cal_ant\"\n                  onChange={this.handleSelectChange}>\n                  <option>Yes</option>\n                  <option>No</option>\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Calcification quality (mg)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mg)\"  \n                  name=\"cal_qu\"\n                  value={formData.cal_qu}\n                  onChange={this.handleChange} />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label className=\"label-head-small\">Diameters of anterior papillary muscles</Form.Label>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Long1(mm)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mm)\" \n                  name=\"dia_ant_long\"\n                  value={formData.dia_ant_long}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Short1(mm)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mm)\" \n                  name=\"dia_ant_short\"\n                  value={formData.dia_ant_short}\n                  onChange={this.handleChange} />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label className=\"label-head-small\">Diameters of posterior papillary muscles</Form.Label>\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>Long2(mm)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mm)\" \n                  name=\"dia_po_long\"\n                  value={formData.dia_po_long}\n                  onChange={this.handleChange} />\n              </Form.Group>\n              <Form.Group as={Col}>\n                <Form.Label>Short2(mm)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mm)\" \n                  name=\"dia_po_short\"\n                  value={formData.dia_po_short}\n                  onChange={this.handleChange} />\n              </Form.Group>\n            </Form.Row>\n            <Form.Row>\n              <Form.Group as={Col}>\n                <Form.Label>The thinnest thickness of the anterior leaflet zona pellucida (mm)</Form.Label>\n                <Form.Control \n                  type=\"number\" \n                  placeholder=\"(mm)\" \n                  name=\"thinnest\"\n                  value={formData.thinnest}\n                  onChange={this.handleChange} />\n              </Form.Group>\n            </Form.Row>\n            {result === \"\" ? null :\n              (<Row>\n                <Col className=\"result-container\">\n                  <h5 id=\"result\">{result}</h5>\n                </Col>\n              </Row>)\n            }\n            <Row>\n              <Col>\n                <Button\n                  block\n                  variant=\"success\"\n                  disabled={isLoading}\n                  onClick={!isLoading ? this.handlePredictClick : null}>\n                  { isLoading ? 'Making prediction' : 'Predict' }\n                </Button>\n              </Col>\n              <Col>\n                <Button\n                  block\n                  variant=\"danger\"\n                  disabled={isLoading}\n                  onClick={this.handleCancelClick}>\n                  Reset prediction\n                </Button>\n              </Col>\n            </Row>\n          </Form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}